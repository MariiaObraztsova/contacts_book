{"version":3,"sources":["components/ContactDetail/ContactDetail.tsx","components/ContactsList/ContactsList.tsx","users.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ContactDetail","state","name","props","contact","username","email","phone","website","company","isAddingField","fieldName","fieldValue","handleAddFieldButton","setState","handleCancelButton","handleInputChange","event","target","value","handleSubmit","preventDefault","handleAddingNewFieldToContact","id","this","keysOfContact","Object","keys","valuesOfContact","values","className","type","onClick","onSubmit","placeholder","onChange","map","key","index","handleDeletingFieldFromContact","React","Component","ContactsList","isDeletingContact","contactToView","handleDeleteButton","handleSureButton","contactId","deleteContact","handleViewDetailsButton","contacts","find","item","users","address","hasKey","obj","App","isAddingContact","newContactName","newContactPhone","clearForm","handleAddContactButton","handleNewContactNameChange","handleNewContactPhoneChange","handleSubmittingNewContact","newContact","length","prevState","handleDeletingContact","filter","selectedContact","assign","htmlFor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAaaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,EAAKC,MAAMC,QAAQF,KACzBG,SAAU,EAAKF,MAAMC,QAAQC,UAAY,GACzCC,MAAO,EAAKH,MAAMC,QAAQE,OAAS,GACnCC,MAAO,EAAKJ,MAAMC,QAAQG,MAC1BC,QAAS,EAAKL,MAAMC,QAAQI,SAAW,GACvCC,QAAS,EAAKN,MAAMC,QAAQK,SAAW,GACvCC,eAAe,EACfC,UAAW,GACXC,WAAY,IAVhB,EAcEC,qBAAuB,WACrB,EAAKC,SAAS,CAAEJ,eAAe,KAfnC,EAmBEK,mBAAqB,WACnB,EAAKD,SAAS,CAAEJ,eAAe,KApBnC,EAuBEM,kBAAoB,SAACC,GACnB,EAAKH,SAAL,eACGG,EAAMC,OAAOhB,KAAOe,EAAMC,OAAOC,SAzBxC,EA6BEC,aAAe,SAACH,GACdA,EAAMI,iBAEN,EAAKlB,MAAMmB,8BACT,EAAKnB,MAAMC,QAAQmB,GAAI,EAAKtB,MAAMU,UAAU,EAAKV,MAAMW,YAGzD,EAAKE,SAAS,CACZH,UAAW,GACXC,WAAY,MAtClB,4CA0CE,WAAU,IAAD,OACCF,EAAkBc,KAAKvB,MAAvBS,cACFe,EAAgBC,OAAOC,KAAKH,KAAKrB,MAAMC,SACvCwB,EAAkBF,OAAOG,OAAOL,KAAKrB,MAAMC,SAEjD,OACE,sBAAK0B,UAAU,gBAAf,UACE,iDAICpB,EACG,gCACE,wBACAqB,KAAK,SACLD,UAAU,cACVE,QAASR,KAAKT,mBAHd,oBAQA,uBAAMkB,SAAUT,KAAKJ,aAArB,UACE,uBACEW,KAAK,OACL7B,KAAK,YACLiB,MAAOK,KAAKvB,MAAMU,UAClBuB,YAAY,iBACZC,SAAU,SAAClB,GAAD,OAAW,EAAKD,kBAAkBC,MAG9C,uBACEc,KAAK,OACL7B,KAAK,aACLiB,MAAOK,KAAKvB,MAAMW,WAClBsB,YAAY,kBACZC,SAAU,SAAClB,GAAD,OAAW,EAAKD,kBAAkBC,MAG9C,wBAAQc,KAAK,SAAb,6BAMJ,wBACEA,KAAK,SACLD,UAAU,cACVE,QAASR,KAAKX,qBAHhB,2BASJ,6BACGY,EAAcW,KAAI,SAACC,EAAKC,GAAN,OACjB,qBAEER,UAAU,sBAFZ,oBAIMO,EAJN,aAIcT,EAAgBU,IAE5B,wBACEP,KAAK,SACLD,UAAU,8BACVE,QAAS,kBAAM,EAAK7B,MAAMoC,+BACxB,EAAKpC,MAAMC,QAAQmB,GAAIc,IAJ3B,iBALKA,eAlGnB,GAAmCG,IAAMC,WCE5BC,G,MAAb,4MACEzC,MAAQ,CACN0C,mBAAmB,EACnBC,cAAe,MAHnB,EAMEC,mBAAqB,WACnB,EAAK/B,SAAS,CAAE6B,mBAAmB,KAPvC,EAUE5B,mBAAqB,WACnB,EAAKD,SAAS,CAAE6B,mBAAmB,KAXvC,EAcEG,iBAAmB,SAACC,GAClB,EAAK5C,MAAM6C,cAAcD,GACzB,EAAKjC,SAAS,CAAE6B,mBAAmB,KAhBvC,EAmBEM,wBAA0B,SAACF,GACQ,OAA7B,EAAK9C,MAAM2C,cACb,EAAK9B,SAAS,CACZ8B,cAAe,EAAKzC,MAAM+C,SAASC,MAAK,SAAAC,GAAI,OAAIA,EAAK7B,KAAOwB,OAG9D,EAAKjC,SAAS,CACZ8B,cAAe,QA1BvB,4CA+BE,WAAU,IAAD,OACCM,EAAa1B,KAAKrB,MAAlB+C,SACAP,EAAsBnB,KAAKvB,MAA3B0C,kBAER,OACE,sBAAKb,UAAU,YAAf,UACE,oBAAIA,UAAU,eAAd,SACGoB,EAASd,KAAI,SAAAhC,GAAO,OACnB,qBAAqB0B,UAAU,qBAA/B,UACE,sBAAKA,UAAU,4BAAf,UACE,iCACG1B,EAAQF,OAGVE,EAAQG,SAGX,sBAAKuB,UAAU,iCAAf,UACE,wBACEC,KAAK,SACLD,UAAU,uBACVE,QAAS,EAAKa,mBAHhB,oBAOA,wBACEd,KAAK,SACLD,UAAU,uBACVE,QAAS,kBAAM,EAAKiB,wBAAwB7C,EAAQmB,KAHtD,SAKG,EAAKtB,MAAM2C,cACP,SACA,oBAKRD,GACG,gCACE,wBACEZ,KAAK,SACLC,QAAS,kBAAM,EAAKc,iBAAiB1C,EAAQmB,KAF/C,kBAOA,wBACEQ,KAAK,SACLC,QAAS,EAAKjB,mBAFhB,yBAtCCX,EAAQmB,SAiDpBC,KAAKvB,MAAM2C,eACV,cAAC,EAAD,CACExC,QAASoB,KAAKvB,MAAM2C,cACpBtB,8BAA+BE,KAAKrB,MAAMmB,8BAC1CiB,+BAAgCf,KAAKrB,MAAMoC,wCA5FvD,GAAkCC,IAAMC,YCuFzBY,EAtGD,CACZ,CACE9B,GAAI,EACJrB,KAAM,gBACNG,SAAU,OACVC,MAAO,oBACPC,MAAO,wBACPC,QAAS,gBACTC,QAAS,mBAEX,CACEc,GAAI,EACJrB,KAAM,eACNG,SAAU,YACVC,MAAO,oBACPgD,QAAS,oBACT/C,MAAO,sBACPC,QAAS,gBACTC,QAAS,gBAEX,CACEc,GAAI,EACJrB,KAAM,mBACNG,SAAU,WACVC,MAAO,qBACPgD,QAAS,wBACT/C,MAAO,iBACPC,QAAS,cACTC,QAAS,sBAEX,CACEc,GAAI,EACJrB,KAAM,mBACNG,SAAU,WACVC,MAAO,4BACPgD,QAAS,kBACT/C,MAAO,oBACPC,QAAS,WACTC,QAAS,iBAEX,CACEc,GAAI,EACJrB,KAAM,mBACNG,SAAU,SACVC,MAAO,2BACPgD,QAAS,mBACT/C,MAAO,gBACPC,QAAS,eACTC,QAAS,eAEX,CACEc,GAAI,EACJrB,KAAM,uBACNG,SAAU,mBACVC,MAAO,0BACPgD,QAAS,wBACT/C,MAAO,uBACPC,QAAS,UACTC,QAAS,qBAEX,CACEc,GAAI,EACJrB,KAAM,kBACNG,SAAU,eACVC,MAAO,yBACPgD,QAAS,gBACT/C,MAAO,eACPC,QAAS,WACTC,QAAS,eAEX,CACEc,GAAI,EACJrB,KAAM,2BACNG,SAAU,gBACVC,MAAO,uBACPgD,QAAS,uBACT/C,MAAO,oBACPC,QAAS,eACTC,QAAS,mBAEX,CACEc,GAAI,EACJrB,KAAM,kBACNG,SAAU,WACVC,MAAO,0BACPgD,QAAS,iBACT/C,MAAO,uBACPC,QAAS,aACTC,QAAS,iBAEX,CACEc,GAAI,GACJrB,KAAM,qBACNG,SAAU,iBACVC,MAAO,yBACPgD,QAAS,sBACT/C,MAAO,eACPC,QAAS,cACTC,QAAS,eCpFb,SAAS8C,EAAUC,EAAQnB,GACzB,OAAOA,KAAOmB,E,IAGVC,E,4MACJxD,MAAQ,CACNiD,SAAUG,EACVK,iBAAiB,EACjBC,eAAgB,GAChBC,gBAAiB,I,EAInBC,UAAY,WACV,EAAK/C,SAAS,CACZ6C,eAAgB,GAChBC,gBAAiB,M,EAKrBE,uBAAyB,WACvB,EAAKhD,SAAS,CAAE4C,iBAAiB,K,EAInC3C,mBAAqB,WACnB,EAAKD,SAAS,CAAE4C,iBAAiB,IACjC,EAAKG,a,EAIPE,2BAA6B,SAAC9C,GAC5B,EAAKH,SAAS,CACZ6C,eAAgB1C,EAAMC,OAAOC,S,EAKjC6C,4BAA8B,SAAC/C,GAC7B,EAAKH,SAAS,CACZ8C,gBAAiB3C,EAAMC,OAAOC,S,EAKlC8C,2BAA6B,SAAChD,GAC5BA,EAAMI,iBAEN,IAAM6C,EAAa,CACjB3C,GAAI,EAAKtB,MAAMiD,SAASiB,OAAS,EACjCjE,KAAM,EAAKD,MAAM0D,eACjBpD,MAAO,EAAKN,MAAM2D,iBAGpB,EAAK9C,UAAS,SAAAsD,GAAS,MAAK,CAC1BlB,SAAS,GAAD,mBAAMkB,EAAUlB,UAAhB,CAA0BgB,IAClCR,iBAAiB,MAGnB,EAAKG,a,EAGPQ,sBAAwB,SAACtB,GACvB,EAAKjC,UAAS,SAAAsD,GAAS,MAAK,CAC1BlB,SAAU,YAAIkB,EAAUlB,UAAUoB,QAAO,SAAAlE,GAAO,OAAIA,EAAQmB,KAAOwB,U,EAIvEzB,8BAAgC,SAC9ByB,EACApC,EACAC,GACA,IAAM2D,EAAkB,EAAKtE,MAAMiD,SAASC,MAAK,SAAAC,GAAI,OAAIA,EAAK7B,KAAOwB,KAEjEwB,GACF7C,OAAO8C,OAAOD,EAAd7C,OAAA,IAAAA,CAAA,GAAiCf,EAAYC,K,EAIjD2B,+BAAiC,SAC/BQ,EACApC,GACA,IAAM4D,EAAkB,EAAKtE,MAAMiD,SAASC,MAAK,SAAAC,GAAI,OAAIA,EAAK7B,KAAOwB,KAEjEwB,GAAmBhB,EAAOgB,EAAiB5D,WACtC4D,EAAgB5D,I,4CAI3B,WACE,MAKIa,KAAKvB,MAJPiD,EADF,EACEA,SACAQ,EAFF,EAEEA,gBACAC,EAHF,EAGEA,eACAC,EAJF,EAIEA,gBAGF,OACE,sBAAK9B,UAAU,MAAf,UACE,+CAIC4B,EACG,wBACE3B,KAAK,SACLD,UAAU,cACVE,QAASR,KAAKT,mBAHhB,oBAQA,wBACEgB,KAAK,SACLD,UAAU,cACVE,QAASR,KAAKsC,uBAHhB,6BAUHJ,GACC,uBACE5B,UAAU,WACVG,SAAUT,KAAKyC,2BAFjB,UAIE,wBAAOQ,QAAQ,cAAf,kBAEE,uBACE1C,KAAK,OACLR,GAAG,cACHrB,KAAK,iBACLiB,MAAOwC,EACPxB,SAAUX,KAAKuC,gCAInB,wBAAOU,QAAQ,eAAf,mBAEE,uBACE1C,KAAK,MACLR,GAAG,eACHrB,KAAK,kBACLiB,MAAOyC,EACPzB,SAAUX,KAAKwC,iCAInB,wBACEjC,KAAK,SACLD,UAAU,cAFZ,oBASHoB,EAASiB,OACN,cAAC,EAAD,CACAjB,SAAUA,EACVF,cAAexB,KAAK6C,sBACpB/C,8BAA+BE,KAAKF,8BACpCiB,+BAAgCf,KAAKe,iCAEpC,0D,GAlKKC,IAAMC,WAyKTgB,IC7KAiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f3210be2.chunk.js","sourcesContent":["import React from 'react';\nimport { Contact } from '../../types';\nimport './ContactDetail.css';\n\ntype Props = {\n  contact: Contact,\n  handleAddingNewFieldToContact: (contactId: number,\n    fieldName: string,\n    fieldValue: string | number) => void,\n    handleDeletingFieldFromContact: (contactId: number,\n      fieldName: string) => void,\n}\n\nexport class ContactDetail extends React.Component<Props> {\n  state = {\n    name: this.props.contact.name,\n    username: this.props.contact.username || '',\n    email: this.props.contact.email || '',\n    phone: this.props.contact.phone,\n    website: this.props.contact.website || '',\n    company: this.props.contact.company || '',\n    isAddingField: false,\n    fieldName: '',\n    fieldValue: '',\n  }\n\n  // handeling click on \"Add field\" button to show the form\n  handleAddFieldButton = () => {\n    this.setState({ isAddingField: true });\n  }\n\n  // handeling click on \"Cancel\" button to hide the form\n  handleCancelButton = () => {\n    this.setState({ isAddingField: false});\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    this.props.handleAddingNewFieldToContact(\n      this.props.contact.id, this.state.fieldName,this.state.fieldValue\n    );\n\n    this.setState({\n      fieldName: '',\n      fieldValue: '',\n    })\n  }\n\n  render() {\n    const { isAddingField } = this.state;\n    const keysOfContact = Object.keys(this.props.contact);\n    const valuesOfContact = Object.values(this.props.contact);\n\n    return (\n      <div className=\"ContactDetail\">\n        <h1>\n          Contact details\n        </h1>\n\n        {isAddingField ? (\n            <div>\n              <button\n              type=\"button\"\n              className=\"App__button\"\n              onClick={this.handleCancelButton}\n              >\n                Cancel\n              </button>\n\n              <form onSubmit={this.handleSubmit}>\n                <input\n                  type=\"text\"\n                  name=\"fieldName\"\n                  value={this.state.fieldName}\n                  placeholder=\"New field name\"\n                  onChange={(event) => this.handleInputChange(event)}\n                />\n\n                <input\n                  type=\"text\"\n                  name=\"fieldValue\"\n                  value={this.state.fieldValue}\n                  placeholder=\"New field value\"\n                  onChange={(event) => this.handleInputChange(event)}\n                />\n\n                <button type=\"submit\">\n                  Add field\n                </button>\n              </form>\n            </div>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"App__button\"\n              onClick={this.handleAddFieldButton}\n            >\n              Add new field\n            </button>\n          )\n        }\n        <ul>\n          {keysOfContact.map((key, index) => (\n            <li\n              key={key}\n              className=\"ContactDetail__item\"\n            >\n              {`${key}: ${valuesOfContact[index]}`}\n\n              <button\n                type=\"button\"\n                className=\"ContactDetail__deleteButton\"\n                onClick={() => this.props.handleDeletingFieldFromContact(\n                  this.props.contact.id, key\n                )}>\n                X\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n}\n","import React from 'react';\nimport { Contact } from '../../types';\nimport { ContactDetail } from '../ContactDetail/ContactDetail';\nimport './ContactsList.css';\n\ntype Props = {\n  contacts: Contact[],\n  deleteContact: (contactId: number) => void,\n  handleAddingNewFieldToContact: (contactId: number,\n  fieldName: string,\n  fieldValue: string | number) => void,\n  handleDeletingFieldFromContact: (contactId: number,\n    fieldName: string) => void,\n}\n\nexport class ContactsList extends React.Component<Props> {\n  state = {\n    isDeletingContact: false,\n    contactToView: null,\n  }\n\n  handleDeleteButton = () => {\n    this.setState({ isDeletingContact: true });\n  };\n\n  handleCancelButton = () => {\n    this.setState({ isDeletingContact: false });\n  };\n\n  handleSureButton = (contactId: number) => {\n    this.props.deleteContact(contactId);\n    this.setState({ isDeletingContact: false });\n  }\n\n  handleViewDetailsButton = (contactId: number) => {\n    if (this.state.contactToView === null) {\n      this.setState({\n        contactToView: this.props.contacts.find(item => item.id === contactId)\n      })\n    } else {\n      this.setState({\n        contactToView: null,\n      })\n    }\n  }\n\n  render() {\n    const { contacts } = this.props;\n    const { isDeletingContact } = this.state;\n\n    return (\n      <div className=\"container\">\n        <ul className=\"ContactsList\">\n          {contacts.map(contact => (\n            <li key={contact.id} className=\"ContactsList__item\">\n              <div className=\"ContactsList__contactInfo\">\n                <strong>\n                  {contact.name}\n                </strong>\n\n                {contact.phone}\n              </div>\n\n              <div className=\"ContactsList__buttonsContainer\">\n                <button\n                  type=\"button\"\n                  className=\"ContactsList__button\"\n                  onClick={this.handleDeleteButton}>\n                  Delete\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"ContactsList__button\"\n                  onClick={() => this.handleViewDetailsButton(contact.id)}\n                >\n                  {this.state.contactToView\n                    ? ('Cancel')\n                    : ('View details')\n                  }\n                </button>\n              </div>\n\n              {isDeletingContact && (\n                  <div>\n                    <button\n                      type=\"button\"\n                      onClick={() => this.handleSureButton(contact.id)}\n                    >\n                      Sure\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      onClick={this.handleCancelButton}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                )}\n            </li>\n          ))}\n        </ul>\n        {this.state.contactToView && (\n          <ContactDetail\n            contact={this.state.contactToView}\n            handleAddingNewFieldToContact={this.props.handleAddingNewFieldToContact}\n            handleDeletingFieldFromContact={this.props.handleDeletingFieldFromContact}\n          />\n        )}\n      </div>\n    );\n  }\n}","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: 'Romaguera-Crona',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: 'Victor Plains 879',\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: 'Deckow-Crist',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: 'Douglas Extension 847',\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: 'Romaguera-Jacobson',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: 'Hoeger Mall 692',\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: 'Robel-Corkery',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: 'Skiles Walks 351',\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: 'Keebler LLC',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: 'Norberto Crossing 950',\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: 'Considine-Lockman',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: 'Rex Trail 280',\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: 'Johns Group',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: 'Ellsworth Summit 729',\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: 'Abernathy Group',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: 'Dayna Park 449',\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: 'Yost and Sons',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: 'Kattie Turnpike 198',\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: 'Hoeger LLC',\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport { ContactsList } from './components/ContactsList/ContactsList';\nimport { Contact } from './types';\n\nimport users from './users';\n\ntype State = {\n  contacts: Contact[],\n  isAddingContact: boolean,\n  newContactName: string,\n  newContactPhone: string,\n}\n\nfunction hasKey<O>(obj: O, key: PropertyKey): key is keyof O {\n  return key in obj\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    contacts: users,\n    isAddingContact: false,\n    newContactName: '',\n    newContactPhone: '',\n  }\n\n  // clear \"add contact\" form\n  clearForm = () => {\n    this.setState({\n      newContactName: '',\n      newContactPhone: '',\n    })\n  }\n\n  // handeling click on \"Add contact\" button to show the form\n  handleAddContactButton = () => {\n    this.setState({ isAddingContact: true });\n  }\n\n  // handeling click on \"Cancel\" button to hide the form\n  handleCancelButton = () => {\n    this.setState({ isAddingContact: false});\n    this.clearForm();\n  }\n\n  // handeling adding new contact name\n  handleNewContactNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      newContactName: event.target.value,\n    });\n  };\n\n  // handeling adding new contact phone\n  handleNewContactPhoneChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      newContactPhone: event.target.value,\n    });\n  };\n\n  // handeling adding new contact to contacts list\n  handleSubmittingNewContact = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: this.state.contacts.length + 1,\n      name: this.state.newContactName,\n      phone: this.state.newContactPhone,\n    };\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n      isAddingContact: false,\n    }))\n\n    this.clearForm();\n  }\n\n  handleDeletingContact = (contactId: number) => {\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts].filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handleAddingNewFieldToContact = (\n    contactId: number,\n    fieldName: string,\n    fieldValue: string | number) => {\n    const selectedContact = this.state.contacts.find(item => item.id === contactId);\n\n    if (selectedContact) {\n      Object.assign(selectedContact, {[fieldName]: fieldValue});\n    }\n  }\n\n  handleDeletingFieldFromContact = (\n    contactId: number,\n    fieldName: string) => {\n    const selectedContact = this.state.contacts.find(item => item.id === contactId);\n\n    if (selectedContact && hasKey(selectedContact, fieldName)) {\n      delete selectedContact[fieldName];\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      isAddingContact,\n      newContactName,\n      newContactPhone\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Contacts List\n        </h1>\n\n        {isAddingContact ? (\n            <button\n              type=\"button\"\n              className=\"App__button\"\n              onClick={this.handleCancelButton}\n            >\n              Cancel\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"App__button\"\n              onClick={this.handleAddContactButton}\n            >\n              Add new contact\n            </button>\n          )\n        }\n\n        {isAddingContact && (\n          <form\n            className=\"App_form\"\n            onSubmit={this.handleSubmittingNewContact}\n          >\n            <label htmlFor=\"contactName\">\n              Name:\n              <input\n                type=\"text\"\n                id=\"contactName\"\n                name=\"newContactName\"\n                value={newContactName}\n                onChange={this.handleNewContactNameChange}\n              />\n            </label>\n\n            <label htmlFor=\"contactPhone\">\n              Phone:\n              <input\n                type=\"tel\"\n                id=\"contactPhone\"\n                name=\"newContactPhone\"\n                value={newContactPhone}\n                onChange={this.handleNewContactPhoneChange}\n              />\n            </label>\n\n            <button\n              type=\"submit\"\n              className=\"App__button\"\n            >\n              Add\n            </button>\n          </form>\n        )}\n\n        {contacts.length\n          ? <ContactsList\n            contacts={contacts}\n            deleteContact={this.handleDeletingContact}\n            handleAddingNewFieldToContact={this.handleAddingNewFieldToContact}\n            handleDeletingFieldFromContact={this.handleDeletingFieldFromContact}\n          />\n          : (<h2> No contacts yet </h2>)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}